#!/bin/zsh
# -*- coding:utf-8 -*-
###############################################################################
# .zshenv -- My ZSH configuration (feat. Oh-my-zsh)
# .          refer to https://github.com/Falkor/dotfiles
#                                  _
#                          _______| |__   ___ _ ____   __
#                         |_  / __| '_ \ / _ \ '_ \ \ / /
#                        _ / /\__ \ | | |  __/ | | \ V /
#                       (_)___|___/_| |_|\___|_| |_|\_/
#
###############################################################################
# Resources:
# - https://github.com/seirhsiao/dotfiles
#
# The proposed ZSH startup files are read the the below order:
# (see http://zsh.sourceforge.net/Guide/zshguide02.html)
#
# 1. `~/.zshenv` :         Usually run for every zsh
# 2. `$ZDOTDIR/.zprofile`: Run for login shells
# 3. `$ZDOTDIR/.zshrc`:    Run for interactive shells.`
# 4. `$ZDOTDIR/.zlogin`:   Run for login shells (**after** .zshrc)
#
# In particular, assuming hsiao's dotfiles zsh repository are available under
# ~/.config/zsh/, it should be sufficient to ake `~/.zshenv` a symbolic link
# pointing to `$ZDOTDIR/.zshenv` (as this file sets $ZDOTDIR)
#
#      ln -s ./dotfiles/shell/zsh/.zshenv ~/.zshenv
#
# === OVERVIEW ===
# This configuration enforces:
# - `XDG_*` variables are set according to XDG Base Directory Specification
#  (see https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html):
#     * `XDG_CONFIG_HOME`: `~/.config`
#     * `XDG_DATA_HOME`:   `~/.local/share`
#     * `XDG_CACHE_HOME`:  `~/.cache`
# - Some additional variables are set:
#     * `ZDOTDIR`:       `$XDG_CONFIG_HOME/zsh`
#     * `ZSH`:           `$XDG_DATA_HOME/oh-my-zsh`
#     * `ZSH_CACHE_DIR`: `$XDG_CACHE_HOME/zsh`
# - ZSH config files located under `$ZDOTDIR`.
# - Oh My Zsh files located under `$ZSH`.
# # setting up the system path.
#   https://github.com/pbrisbin/oh-my-zsh/blob/master/templates/zshenv
#   https://wiki.archlinux.org/index.php/Dotfiles
#   https://github.com/zsh-users/
#   http://zsh.sourceforge.net/Doc/Release/zsh.html#Top
###############################################################################
# set -x # Debug

# Unless -f is specified, .zshenv is sourced on all shell invocations.
# Consequently, there should be only critical commands environment in this file.

## OS ENV
export OSTYPE=`uname -s`
export MTYPE=`uname -m`
export VERSION=`uname -r`
export ARCH_TYPE=${OSTYPE}_${MTYPE}
export HOST=`hostname`

## XDG  Base Directory Specification
# See https://specifications.freedesktop.org/basedir-spec/latest/
export XDG_CONFIG_HOME=${HOME}/.config
export XDG_CACHE_HOME=${HOME}/.cache
export XDG_DATA_HOME=${HOME}/.local/share

## ====== ZSH Specific variables =========
# export ZDOTDIR=$XDG_CONFIG_HOME/zsh
export ZSH_HOME=${HOME}/.zsh
export ZSH_CACHE_DIR=${XDG_CACHE_HOME}/zsh
export ZPLUG_HOME=${HOME}/.zplug

## Editor
if which vim &> /dev/null; then
  export EDITOR="vim"
elif which vi &> /dev/null; then
  export EDITOR="vi"
fi

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='/usr/bin/vim'
#   #export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

unset ALTERNATE_EDITOR
# Preferred editor for local and remote sessions
# test -n "$(command -v vim)" && EDITOR=vim || EDITOR=nano
# Uncomment if you prefer macvim
# [[ -n $SSH_CONNECTION ]] && EDITOR='mvim'
# export EDITOR
# export EDITOR='emacsclient -t'

## Pager.
# if test -n "$(command -v less)" ; then
#     PAGER="less -FirSwX"
#     MANPAGER="less -FiRswX"
# else
#     PAGER=more
#     MANPAGER="$PAGER"
# fi
if [[ -x $( which less) ]]
    export LESS='Ri'
    export LESSCHARSET="utf-8"
then
    PAGER="less -FiRswXSM"
    MANPAGER="less -FiRswXSM"
    if [[ $terminfo[colors] -ge 8 ]]
    then
        # LESS man page colors (makes Man pages more readable).
        export LESS_TERMCAP_mb=$'\E[01;31m'
        export LESS_TERMCAP_md=$'\E[01;31m'
        export LESS_TERMCAP_me=$'\E[0m'
        export LESS_TERMCAP_se=$'\E[0m'
        export LESS_TERMCAP_so=$'\E[01;44;33m'
        export LESS_TERMCAP_ue=$'\E[0m'
        export LESS_TERMCAP_us=$'\E[01;32m'
    fi
    # Less status line
    # export LESS='-R -f -X -i -P ?f%f:(stdin). ?lb%lb?L/%L.. [?eEOF:?pb%pb\%..]'
    export LESSCHARSET='utf-8'
else
    PAGER="more"
    MANPAGER="$PAGER"
fi

export PAGER MANPAGER
export VISUAL="${EDITOR}"
export CVSEDITOR="${EDITOR}"
export SVN_EDITOR="${EDITOR}"
export GIT_EDITOR="${EDITOR}"
# Version control software.
export CVS_RSH="ssh"
export RSYNC_RSH="ssh"

# Store ZSH files under XDG_CONFIG_HOME base directory.
# This works by symlinking ~/.zshenv to ~/.config/zsh/.zshenv (this file).



## History
#HISTFILE=~/.zsh/history
#export HISTFILE=$ZSH_CACHE_DIR/zhistory
export HISTFILE=${XDG_CACHE_HOME}/.zsh_history
export HISTSIZE=3000
export SAVEHIST=3000
export HIST_STAMPS="yyyy-mm-dd"
#HIST_STAMPS="mm/dd/yyyy"

#================================================================
# [Final] Custom ZSH enviroment variables
[[ -f $ZDOTDIR/custom.zshenv ]] && source $ZDOTDIR/custom.zshenv
#================================================================


([[ -x $(which vimdiff) ]]   && export DIFFER="vimdiff")   || \
([[ -x $(which colordiff) ]] && export DIFFER="colordiff") || \
([[ -x $(which diff) ]]      && export DIFFER="diff")      || \
echo "WARNING: You do not have any differ installed!"

## Colors

# GNU core utilities
#eval `dircolors ~/.zsh/dircolors.256dark` # colored ls
export TERM="xterm-256color"

# ls command colors
export CLICOLOR=1
export LSCOLORS=exfxcxdxbxegedabagacad
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
os_type=$(echo ${OSTYPE} | tr A-Z a-z)

case ${os_type} in
  darwin*)
      export CM_CONF_LS_COLOR="-GF"
      export CM_CONF_MORE_COLOR="-r"
      export CM_CONF_LS_DIRGROUP=
  ;;
  linux*)
      export CM_CONF_LS_COLOR="--color"
      export CM_CONF_MORE_COLOR=
      export CM_CONF_LS_DIRGROUP="--group-directories-first"
  ;;
  *)
      export CM_CONF_LS_COLOR="--color"
      export CM_CONF_MORE_COLOR=
      export CM_CONF_LS_DIRGROUP="--group-directories-first"
  ;;
esac

## PATH.
if [[ -f ${ZSH_HOME}/zpath ]]; then
  source ${ZSH_HOME}/zpath
else
  # MacPorts Installer addition on 2018-11-28_at_22:08:00: adding an appropriate PATH variable for use with MacPorts.
  PATH="/opt/local/bin:/opt/local/sbin:${PATH}";
  MANPATH="/opt/local/share/man:$MANPATH"
fi

export PATH

# === Now ${ZDOTDIR}/.zshrc will be loaded.... ===

# Avoid issues with `gpg` as installed via Homebrew.
# https://stackoverflow.com/a/42265848/96656
export GPG_TTY=$(tty);

# OS-specific environment.
case ${os_type} in
  darwin*)
    # Ignore reading of /etc/profile, which messes with $PATH. We re-enable
    # reading other system-wide zsh files in ~/.zprofile. See
    # http://www.zsh.org/mla/users/2015/msg00725.html for details.
    setopt no_global_rcs
    # Opt out of Homebrew analytics.
    export HOMEBREW_NO_ANALYTICS=1
    ## Set HOMEBREW Mirror
    export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles
    ## add coreutils
    if brew list | grep icu4c > /dev/null ; then
      PATH="$(brew --prefix icu4c)/bin:$(brew --prefix icu4c)/sbin:$PATH"
    fi

    if brew list | grep coreutils > /dev/null ; then
      PATH="$(brew --prefix coreutils)/libexec/gnubin:$PATH"
      MANPATH="$(brew --prefix coreutils)/libexec/gnuman:${MANPATH}"
      # alias ls='ls -F --show-control-chars --color=auto'
      # eval `gdircolors -b $HOME/.dir_colors`
    fi
    # On OSX, we install zplug via Homebrew.
    # export ZPLUG_HOME=/usr/local/opt/zplug

    export ZPLUG_HOME=${HOME}/.zplug
    ## Add Develop Environment
    ## need use brew install ant maven tomcat jetty leiningen clojure
    JAVA_HOME="/Library/Java/JavaVirtualMachines/jdk1.8.0_172.jdk/Contents/Home"
    ## M2_HOME=/Users/xiao/work/maven/apache-maven-3.6.0/
    ## brew install will link /usr/local/Cellar/clojure/<version>/bin to /usr/local/bin/clojure
    # Set home path for "ant, maven and jenv".
    ## upgrade use brew upgarde ant
    ANT_HOME=/usr/local/Cellar/ant/1.10.5
    ## upgrade use brew upgarde maven
    M2_HOME=/usr/local/Cellar/maven/3.6.0
    ## upgrade use brew upgarde git
    GIT_HOME=/usr/local/Cellar/git/2.17.1
    ## upgrade use brew upgarde leiningen
    LEIN_HOME=/usr/local/bin/leiningen/2.8.3
    CLOJURE_HOME=/usr/local/Cellar/clojure/1.10.0.403
    MONGODB_HOME=/usr/local/Cellar/mongodb/4.0.4_1
    MYSQL_HOME=/usr/local/Cellar/mysql/5.7.22
    NODE_HOME=/usr/local/Cellar/node/10.0.0

    CLOJURE_JAR=/Users/xiao/.m2/repository/org/clojure/clojure/1.9.0/clojure-1.9.0.jar
    PATH="${JAVA_HOME}/bin:${ANT_HOME}/bin:${M2_HOME}/bin:${LEIN_HOME}/bin:${CLOJURE_HOME}/bin \
    :${MYSQL_HOME}/bin \
    :${MONGODB_HOME}/bin \
    :${NODE_HOME}:${PATH}"
    CLASSPATH=".:${JAVA_HOME}/lib/dt.jar:${JAVA_HOME}/lib/tools.jar:${LEIN_HOME}/libexec/leiningen-2.8.3-standalone.jar:${CLOJURE_JAR}:${CLOJURE_HOME}/libexec/clojure-tools-1.10.0.403.jar"
    ;;
esac

export JAVA_HOME
export M2_HOME
export ANT_HOME
export CLOJURE_HOME
export LEIN_HOME
export MONGODB_HOME
export MYSQL_HOME
export CLASSPATH
export PATH

# Locale
# enable en_US locale w/ UTF-8 encodings if not already configured
# Set UTF-8 locale.
export LANG=en_US.UTF-8
#export LANG=zh_CN.UTF-8
export LANGUAGE=en
export LC_ALL="${LANG}"

if [[ -e ${ZSH_HOME}/${HOST}.zshenv ]] ; then
    echo "source ${HOST}.zshenv"
    source ${ZSH_HOME}/${HOST}.zshenv
fi

if [[ -e ${ZSH_HOME}/local.zshenv ]] ; then
    echo "source ${ZSH_HOME}/local.zshenv"
    source ${ZSH_HOME}/local.zshenv
fi

# Source local environment.
if [[ -e ${HOME}/.zshenv.local ]] ; then
    echo "source .zshenv.local"
    source ${HOME}/.zshenv.local
fi

# Proxy settings
#export http_proxy='127.0.0.1:5050'
#export https_proxy='127.0.0.1:5050'
#export ftp_proxy='127.0.0.1:5050'

# vim: ft=zsh
