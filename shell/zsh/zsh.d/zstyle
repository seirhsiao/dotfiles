#!/bin/zsh
#
# :completion:<func>:<completer>:<command>:<argument>:<tag>
# Expansion options
# =============================================================================
#                                 Completions
# =============================================================================
# -e：
# Exit immediately if a command exits with a non-zero exit status.
# 若指令传回值不等于0，则立即退出shell
# set -e
# setopt xtrace

# Completion caching speed up with cache
zstyle ':completion::complete:*'    use-cache on                          # use-cache on
zstyle ':completion:*'              cache-path $HOME/.cache/zsh          # speed up completion

# general
zstyle ':completion:*:*:*:*:*'      menu select
zstyle ':completion:*:*:*:*:*'      menu yes select                       # Enable menu list
zstyle ':completion:*:*:*:default'  menu no select
zstyle ':completion:*:*:default'    force-list always

zstyle ':completion:*:matches'      group 'yes'
zstyle ':completion:*:options'      description 'yes'
zstyle ':completion:*:options'      auto-description '%d'
zstyle ':completion:*:functions'    ignored-patterns '_*'                 # don't auto-complete internal functions (ones prefixed with _)
zstyle ':completion:*:cd:*'         tag-order local-directories directory-stack path-directories    # disable named-directories autocompletion
# When doing `cd ../<TAB>`, don't offer the current directory as an option.
zstyle ':completion:*:cd:*' ignore-parents parent pwd


zstyle ':completion:*'              group-name ''

# Completion Options
zstyle ':completion:*:match:*' original only
zstyle ':completion::prefix-1:*' completer _complete
zstyle ':completion:predict:*' completer _complete
zstyle ':completion:incremental:*' completer _complete _correct
zstyle ':completion:*' completer _complete _prefix _correct _prefix _match _approximate

# list of completers to use
zstyle ':completion:*::::' completer _expand _complete _ignored _approximate
zstyle ':completion:*' menu select=1 _complete _ignored _approximate
# 错误校正
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# Path Expansion
zstyle ':completion:*' expand 'yes'
zstyle ':completion:*' squeeze-shlashes 'yes'
zstyle ':completion::complete:*' '\\'


# GNU Colors
# [ -f /etc/DIR_COLORS ] && eval $(dircolors -b /etc/DIR_COLORS)
# export ZLSCOLORS="${LS_COLORS}"

# 彩色补全菜单
#zmodload zsh/complist
#
# Fallback to built in ls colors
#zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'

# Make the list prompt friendly
zstyle ':completion:*' list-prompt '%SAt %p: Hit TAB for more, or the character to insert%s'

# Make the selection prompt friendly when there are a lot of choices
zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'

# match uppercase from lowercase
# case-insensitive (all), partial-word and then substring completion
zstyle ':completion:*' matcher-list \
  'm:{a-zA-Z}={A-Za-z}' \
  'r:|[._-]=* r:|=*' \
  'l:|=* r:|=*'

# offer indexes before parameters in subscripts
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters

#  tag-order 'globbed-files directories' all-files
zstyle ':completion::complete:*:tar:directories' file-patterns '*~.*(-/)'
# Don't complete backup files as executables
zstyle ':completion:*:complete:-command-::commands' ignored-patterns '*\~'
zstyle ':completion:*:-command-:*:'    verbose false

#kill 命令补全
# compdef pkill=kill
# compdef pkill=killall
# Show a menu (with arrow keys) to select the process to kill.
zstyle ':completion:*:*:kill:*' menu yes select
# zstyle ':completion:*:*:*:*:processes' force-list always
zstyle ':completion:*:kill:*'   force-list always

zstyle ':completion:*:processes' command 'ps -au$USER'
# Enable menus!

zstyle ':completion:*:correct:*'       insert-unambiguous true             # start menu completion only if it could find no unambiguous initial string
zstyle ':completion:*:man:*'           menu yes select
zstyle ':completion:*:*:cd:*:directory-stack' menu yes select              # complete 'cd -<tab>' with menu
zstyle ':completion:*' menu select=5

zstyle ':completion:*:history-words' stop verbose
zstyle ':completion:*:history-words' remove-all-dups yes
zstyle ':completion:*:history-words' list false
zstyle ':completion:*:history-words'   menu yes                            # activate menu


zstyle ':completion:*' verbose yes
zstyle ':completion:*' rehash true
# Group matches and Describe
# Describe options in full
zstyle ':completion:*:matches' group 'yes'
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:options' auto-description '%d'

# formatting and messages
# zstyle ':completion:*:descriptions' format $'\e[01;33m -- %d --\e[0m'
# zstyle ':completion:*:messages' format $'\e[01;35m -- %d --\e[0m'
# zstyle ':completion:*:warnings' format $'\e[01;31m -- No Matches Found --\e[0m'
# zstyle ':completion:*:corrections' format $'\e[01;32m -- %d (errors: %e) --\e[0m'
zstyle ':completion:*:descriptions' format "%B ---- %d%b"
zstyle ':completion:*:messages' format '%B%U ---- %d%u%b'
zstyle ':completion:*:warnings' format '%B%U ---- no matches for: %d%u%b'
zstyle ':completion:*:corrections' format '%B%U -- %d (errors: %e)%b'


# complete manual by their section
zstyle ':completion:*:manuals'    separate-sections true
zstyle ':completion:*:manuals.*'  insert-sections   true

zstyle -e ':completion:*:(ssh|scp):*' hosts 'reply=(
          ${=${${(f)"$(cat {/etc/ssh_,~/.ssh/known_}hosts(|2)(N) \
                          /dev/null)"}%%[# ]*}//,/ }
          ${=${(f)"$(cat /etc/hosts(|)(N) <<(ypcat hosts 2>/dev/null))"}%%\#*}
          ${${${(M)${(s:# :)${(zj:# :)${(Lf)"$([[ -f ~/.ssh/config ]] && <~/.ssh/config)"}%%\#*}}##host(|name) *}#host(|name) }/\*}
          )'

# ignore completion functions (until the _ignored completer)
zstyle ':completion:*:functions' ignored-patterns '_*'
zstyle ':completion:*:scp:*' tag-order files users 'hosts:-host hosts:-domain:domain hosts:-ipaddr"IP\ Address *'
zstyle ':completion:*:scp:*' group-order files all-files users hosts-domain hosts-host hosts-ipaddr
zstyle ':completion:*:ssh:*' tag-order users 'hosts:-host hosts:-domain:domain hosts:-ipaddr"IP\ Address *'
zstyle ':completion:*:ssh:*' group-order hosts-domain hosts-host users hosts-ipaddr
zstyle '*' single-ignored show

zstyle ':bracketed-paste-magic' paste-init pasteinit
zstyle ':bracketed-paste-magic' paste-finish pastefinish


##
# vcs_info
#
# FMT_BRANCH="[ ${PR_BLUE}%b${PR_RESET} %u%c]" # e.g. master!?
# FMT_ACTION="(${PR_CYAN}%a${PR_RESET})"   # e.g. (rebase-i)
# FMT_PATH=" ${PR_MAGENTA}%r/%S${PR_RESET}" # e.g. repo/subdir

# zstyle ':vcs_info:*' enable git hg svn
# zstyle ':vcs_info:*:prompt:*' max-exports 3
# zstyle ':vcs_info:*:prompt:*' check-for-changes true
# zstyle ':vcs_info:*:prompt:*' unstagedstr "${PR_RED}?${PR_RESET} "  # display ? if there are unstaged changes
# zstyle ':vcs_info:*:prompt:*' stagedstr "${PR_GREEN}!${PR_RESET} "    # display ! if there are staged changes
# zstyle ':vcs_info:*:prompt:*' actionformats "%s" "${FMT_PATH}" "${FMT_BRANCH}${FMT_ACTION}"
# zstyle ':vcs_info:*:prompt:*' formats       "%s" "${FMT_PATH}" "${FMT_BRANCH}"
# zstyle ':vcs_info:*:prompt:*' nvcsformats   "" "" ""

##
#   ft-complete
#
zstyle ':zle:ft-complete:tilde' widget ft-complete-tilde
zstyle ':zle:ft-complete:empty' action dot-slash-complete
